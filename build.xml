<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="Java-SNePS">
    <property environment="env"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="JUnit 4.libraryclasspath">
        <pathelement location="../../../.p2/pool/plugins/org.junit_4.12.0.v201504281640/junit.jar"/>
        <pathelement location="../../../.p2/pool/plugins/org.hamcrest.core_1.3.0.v201303031735.jar"/>
    </path>
    <path id="Java-SNePS.classpath">
        <pathelement location="bin"/>
        <path refid="JUnit 4.libraryclasspath"/>
    </path>

    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="Java-SNePS.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
  	<path id="src.path">    
  	              	    <pathelement path="src/"/>
  	              	</path>
  	
  	<path id="compile.path">
  	    <path refid="src.path"/>
  	    <fileset dir="lib/">
  	        <include name="**/*.jar"/>
  	    </fileset>
  	</path>

      	<path id="unit.test.path">
      	    <path refid="compile.path"/>
      	    <pathelement path="src/tests/"/>
      	</path>

 
              	<target name="compile">
      	    <javac destdir="bin">
      	        <src path="src"/>
      	        <classpath refid="compile.path"/>
      	    </javac>
      	</target>


      	<target name="test" depends="compile">
      	    <junit printsummary="yes" haltonfailure="yes">
      	    <jvmarg value="-Dfile.encoding=UTF-8"/>
      	        <classpath refid="unit.test.path"/>

      	    	<formatter type="brief" usefile="false" />

      	        <batchtest fork="yes" todir="${this.report}">
      	            <fileset dir="src/tests">
      	                <include name="**/*Test.java"/>
      	                <exclude name="**/AllTests.class"/>
      	                <exclude name="**/*$*.class"/>
      	            </fileset>
      	        </batchtest>
      	    </junit>
      	</target>
              	
</project>